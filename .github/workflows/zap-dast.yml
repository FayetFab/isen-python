name: ZAP DAST Scan

on:
  push:
    branches: [main]

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  zap-baseline:
    runs-on: ubuntu-latest
    continue-on-error: true  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build app image
        run: |
          docker build -t isen-python:latest .
          docker image ls

      - name: Run app container
        run: |
          docker run -d \
            --name classcapture \
            --health-cmd="curl -f http://localhost:8080 || exit 1" \
            --health-interval=5s \
            --health-retries=3 \
            -p 8080:8080 \
            isen-python:latest

      - name: Wait for app
        run: |
          for i in {1..12}; do
            container_status=$(docker inspect -f "{{.State.Health.Status}}" classcapture 2>/dev/null || echo "starting")
            if [ "$container_status" = "healthy" ]; then
              echo "App is ready!"
              curl -v http://localhost:8080
              exit 0
            fi
            sleep 5
          done
          echo "App startup timeout"
          docker logs classcapture
          exit 1

      - name: ZAP baseline scan (1min)
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:8080' 
          cmd_options: '-m 1 -j -l PASS -I' 

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-report
          path: zap-report.json  
        if: always()  