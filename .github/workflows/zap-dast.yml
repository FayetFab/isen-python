name: ZAP DAST Scan

on: [push, pull_request]

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  zap-baseline:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build app image
        run: |
          docker build -t isen-python:latest .
          docker image ls  # Debug

      - name: Run app container
        run: |
          docker run -d \
            --name classcapture \
            --health-cmd="curl -f http://localhost:8080/ || exit 1" \
            --health-interval=5s \
            --health-retries=6 \
            -p 8080:8080 \
            isen-python:latest

      - name: Wait for healthy container
        run: |
          timeout 60 bash -c 'while [[ $(docker inspect -f "{{.State.Health.Status}}" classcapture) != "healthy" ]]; do
            sleep 5
          done'
          docker logs classcapture

      - name: Run ZAP baseline scan (60s)
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:8080'
          cmd_options: '-m 1 -j -l PASS -I'

      - name: Save ZAP report
        run: |
          mv zap-report.json zap-report-$(date +%s).json
        if: always()

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-report
          path: zap-report-*.json
        if: always()